package com.joyveb.report.gens.terrace.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class StatWagerdataExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_STAT_WAGERDATA
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_STAT_WAGERDATA
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_STAT_WAGERDATA
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_STAT_WAGERDATA
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    protected String startRow;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_STAT_WAGERDATA
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    protected String endRow;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_STAT_WAGERDATA
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    protected String sumCol;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_STAT_WAGERDATA
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    protected String groupSelClause;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_STAT_WAGERDATA
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    protected String groupByClause;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_STAT_WAGERDATA
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    protected List<Criteria> andCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_STAT_WAGERDATA
     *
     * @mbggenerated Sat Mar 15 06:42:47 CST 2014
     */
    public StatWagerdataExample() {
        oredCriteria = new ArrayList<Criteria>();
        andCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_STAT_WAGERDATA
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    protected StatWagerdataExample(StatWagerdataExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.distinct = example.distinct;
        this.andCriteria = example.andCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_STAT_WAGERDATA
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_STAT_WAGERDATA
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_STAT_WAGERDATA
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_STAT_WAGERDATA
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_STAT_WAGERDATA
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_STAT_WAGERDATA
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_STAT_WAGERDATA
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_STAT_WAGERDATA
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_STAT_WAGERDATA
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_STAT_WAGERDATA
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        this.startRow=null;
        this.endRow=null;
        this.sumCol=null;
        this.groupSelClause=null;
        this.groupByClause=null;
        andCriteria.clear();
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_STAT_WAGERDATA
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public void setStartRow(String startRow) {
         this.startRow = startRow;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_STAT_WAGERDATA
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public String getStartRow() {
          return startRow;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_STAT_WAGERDATA
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public void setEndRow(String endRow) {
         this.endRow = endRow;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_STAT_WAGERDATA
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public String getEndRow() {
          return endRow;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_STAT_WAGERDATA
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public void setSumCol(String sumCol) {
         this.sumCol = sumCol;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_STAT_WAGERDATA
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public String getSumCol() {
          return sumCol;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_STAT_WAGERDATA
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public void setGroupSelClause(String groupSelClause) {
         this.groupSelClause = groupSelClause;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_STAT_WAGERDATA
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public String getGroupSelClause() {
          return groupSelClause;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_STAT_WAGERDATA
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public void setGroupByClause(String groupByClause) {
         this.groupByClause = groupByClause;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_STAT_WAGERDATA
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public String getGroupByClause() {
          return groupByClause;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_STAT_WAGERDATA
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public List<Criteria> getAndCriteria() {
          return andCriteria;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_STAT_WAGERDATA
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public Criteria and() {
          Criteria criteria = createCriteriaInternal();
          andCriteria.add(criteria);
          return criteria;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_STAT_WAGERDATA
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        public GeneratedCriteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        public void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        public void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        public void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        public void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andLtypeIsNull() {
            addCriterion("LTYPE is null");
            return (Criteria) this;
        }

        public Criteria andLtypeIsNotNull() {
            addCriterion("LTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andLtypeEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("LTYPE =", value, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeNotEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("LTYPE <>", value, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeGreaterThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("LTYPE >", value, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeGreaterThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("LTYPE >=", value, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeLessThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("LTYPE <", value, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeLessThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("LTYPE <=", value, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("LTYPE like", value, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeNotLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("LTYPE not like", value, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("LTYPE in", values, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeNotIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("LTYPE not in", values, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("LTYPE between", value1, value2, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeNotBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("LTYPE not between", value1, value2, "ltype");
            return (Criteria) this;
        }

        public Criteria andMerchantidIsNull() {
            addCriterion("MERCHANTID is null");
            return (Criteria) this;
        }

        public Criteria andMerchantidIsNotNull() {
            addCriterion("MERCHANTID is not null");
            return (Criteria) this;
        }

        public Criteria andMerchantidEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTID =", value, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidNotEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTID <>", value, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidGreaterThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTID >", value, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidGreaterThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTID >=", value, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidLessThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTID <", value, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidLessThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTID <=", value, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTID like", value, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidNotLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTID not like", value, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("MERCHANTID in", values, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidNotIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("MERCHANTID not in", values, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("MERCHANTID between", value1, value2, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidNotBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("MERCHANTID not between", value1, value2, "merchantid");
            return (Criteria) this;
        }

        public Criteria andPeriodIsNull() {
            addCriterion("PERIOD is null");
            return (Criteria) this;
        }

        public Criteria andPeriodIsNotNull() {
            addCriterion("PERIOD is not null");
            return (Criteria) this;
        }

        public Criteria andPeriodEqualTo(BigDecimal value) {
            if(value==null){return (Criteria)this;}
            addCriterion("PERIOD =", value, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodNotEqualTo(BigDecimal value) {
            if(value==null){return (Criteria)this;}
            addCriterion("PERIOD <>", value, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodGreaterThan(BigDecimal value) {
            if(value==null){return (Criteria)this;}
            addCriterion("PERIOD >", value, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodGreaterThanOrEqualTo(BigDecimal value) {
            if(value==null){return (Criteria)this;}
            addCriterion("PERIOD >=", value, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodLessThan(BigDecimal value) {
            if(value==null){return (Criteria)this;}
            addCriterion("PERIOD <", value, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodLessThanOrEqualTo(BigDecimal value) {
            if(value==null){return (Criteria)this;}
            addCriterion("PERIOD <=", value, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodIn(List<BigDecimal> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("PERIOD in", values, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodNotIn(List<BigDecimal> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("PERIOD not in", values, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodBetween(BigDecimal value1, BigDecimal value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("PERIOD between", value1, value2, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodNotBetween(BigDecimal value1, BigDecimal value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("PERIOD not between", value1, value2, "period");
            return (Criteria) this;
        }

        public Criteria andRegionIsNull() {
            addCriterion("REGION is null");
            return (Criteria) this;
        }

        public Criteria andRegionIsNotNull() {
            addCriterion("REGION is not null");
            return (Criteria) this;
        }

        public Criteria andRegionEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("REGION =", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionNotEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("REGION <>", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionGreaterThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("REGION >", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionGreaterThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("REGION >=", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionLessThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("REGION <", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionLessThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("REGION <=", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("REGION like", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionNotLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("REGION not like", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("REGION in", values, "region");
            return (Criteria) this;
        }

        public Criteria andRegionNotIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("REGION not in", values, "region");
            return (Criteria) this;
        }

        public Criteria andRegionBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("REGION between", value1, value2, "region");
            return (Criteria) this;
        }

        public Criteria andRegionNotBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("REGION not between", value1, value2, "region");
            return (Criteria) this;
        }

        public Criteria andStatdateIsNull() {
            addCriterion("STATDATE is null");
            return (Criteria) this;
        }

        public Criteria andStatdateIsNotNull() {
            addCriterion("STATDATE is not null");
            return (Criteria) this;
        }

        public Criteria andStatdateEqualTo(Date value) {
            if(value==null){return (Criteria)this;}
            addCriterion("STATDATE =", value, "statdate");
            return (Criteria) this;
        }

        public Criteria andStatdateNotEqualTo(Date value) {
            if(value==null){return (Criteria)this;}
            addCriterion("STATDATE <>", value, "statdate");
            return (Criteria) this;
        }

        public Criteria andStatdateGreaterThan(Date value) {
            if(value==null){return (Criteria)this;}
            addCriterion("STATDATE >", value, "statdate");
            return (Criteria) this;
        }

        public Criteria andStatdateGreaterThanOrEqualTo(Date value) {
            if(value==null){return (Criteria)this;}
            addCriterion("STATDATE >=", value, "statdate");
            return (Criteria) this;
        }

        public Criteria andStatdateLessThan(Date value) {
            if(value==null){return (Criteria)this;}
            addCriterion("STATDATE <", value, "statdate");
            return (Criteria) this;
        }

        public Criteria andStatdateLessThanOrEqualTo(Date value) {
            if(value==null){return (Criteria)this;}
            addCriterion("STATDATE <=", value, "statdate");
            return (Criteria) this;
        }

        public Criteria andStatdateIn(List<Date> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("STATDATE in", values, "statdate");
            return (Criteria) this;
        }

        public Criteria andStatdateNotIn(List<Date> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("STATDATE not in", values, "statdate");
            return (Criteria) this;
        }

        public Criteria andStatdateBetween(Date value1, Date value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("STATDATE between", value1, value2, "statdate");
            return (Criteria) this;
        }

        public Criteria andStatdateNotBetween(Date value1, Date value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("STATDATE not between", value1, value2, "statdate");
            return (Criteria) this;
        }

        public Criteria andMertradecountIsNull() {
            addCriterion("MERTRADECOUNT is null");
            return (Criteria) this;
        }

        public Criteria andMertradecountIsNotNull() {
            addCriterion("MERTRADECOUNT is not null");
            return (Criteria) this;
        }

        public Criteria andMertradecountEqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERTRADECOUNT =", value, "mertradecount");
            return (Criteria) this;
        }

        public Criteria andMertradecountNotEqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERTRADECOUNT <>", value, "mertradecount");
            return (Criteria) this;
        }

        public Criteria andMertradecountGreaterThan(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERTRADECOUNT >", value, "mertradecount");
            return (Criteria) this;
        }

        public Criteria andMertradecountGreaterThanOrEqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERTRADECOUNT >=", value, "mertradecount");
            return (Criteria) this;
        }

        public Criteria andMertradecountLessThan(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERTRADECOUNT <", value, "mertradecount");
            return (Criteria) this;
        }

        public Criteria andMertradecountLessThanOrEqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERTRADECOUNT <=", value, "mertradecount");
            return (Criteria) this;
        }

        public Criteria andMertradecountIn(List<Long> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("MERTRADECOUNT in", values, "mertradecount");
            return (Criteria) this;
        }

        public Criteria andMertradecountNotIn(List<Long> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("MERTRADECOUNT not in", values, "mertradecount");
            return (Criteria) this;
        }

        public Criteria andMertradecountBetween(Long value1, Long value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("MERTRADECOUNT between", value1, value2, "mertradecount");
            return (Criteria) this;
        }

        public Criteria andMertradecountNotBetween(Long value1, Long value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("MERTRADECOUNT not between", value1, value2, "mertradecount");
            return (Criteria) this;
        }

        public Criteria andMertrademoneyIsNull() {
            addCriterion("MERTRADEMONEY is null");
            return (Criteria) this;
        }

        public Criteria andMertrademoneyIsNotNull() {
            addCriterion("MERTRADEMONEY is not null");
            return (Criteria) this;
        }

        public Criteria andMertrademoneyEqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERTRADEMONEY =", value, "mertrademoney");
            return (Criteria) this;
        }

        public Criteria andMertrademoneyNotEqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERTRADEMONEY <>", value, "mertrademoney");
            return (Criteria) this;
        }

        public Criteria andMertrademoneyGreaterThan(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERTRADEMONEY >", value, "mertrademoney");
            return (Criteria) this;
        }

        public Criteria andMertrademoneyGreaterThanOrEqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERTRADEMONEY >=", value, "mertrademoney");
            return (Criteria) this;
        }

        public Criteria andMertrademoneyLessThan(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERTRADEMONEY <", value, "mertrademoney");
            return (Criteria) this;
        }

        public Criteria andMertrademoneyLessThanOrEqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERTRADEMONEY <=", value, "mertrademoney");
            return (Criteria) this;
        }

        public Criteria andMertrademoneyIn(List<Long> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("MERTRADEMONEY in", values, "mertrademoney");
            return (Criteria) this;
        }

        public Criteria andMertrademoneyNotIn(List<Long> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("MERTRADEMONEY not in", values, "mertrademoney");
            return (Criteria) this;
        }

        public Criteria andMertrademoneyBetween(Long value1, Long value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("MERTRADEMONEY between", value1, value2, "mertrademoney");
            return (Criteria) this;
        }

        public Criteria andMertrademoneyNotBetween(Long value1, Long value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("MERTRADEMONEY not between", value1, value2, "mertrademoney");
            return (Criteria) this;
        }

        public Criteria andTradecountIsNull() {
            addCriterion("TRADECOUNT is null");
            return (Criteria) this;
        }

        public Criteria andTradecountIsNotNull() {
            addCriterion("TRADECOUNT is not null");
            return (Criteria) this;
        }

        public Criteria andTradecountEqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("TRADECOUNT =", value, "tradecount");
            return (Criteria) this;
        }

        public Criteria andTradecountNotEqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("TRADECOUNT <>", value, "tradecount");
            return (Criteria) this;
        }

        public Criteria andTradecountGreaterThan(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("TRADECOUNT >", value, "tradecount");
            return (Criteria) this;
        }

        public Criteria andTradecountGreaterThanOrEqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("TRADECOUNT >=", value, "tradecount");
            return (Criteria) this;
        }

        public Criteria andTradecountLessThan(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("TRADECOUNT <", value, "tradecount");
            return (Criteria) this;
        }

        public Criteria andTradecountLessThanOrEqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("TRADECOUNT <=", value, "tradecount");
            return (Criteria) this;
        }

        public Criteria andTradecountIn(List<Long> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("TRADECOUNT in", values, "tradecount");
            return (Criteria) this;
        }

        public Criteria andTradecountNotIn(List<Long> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("TRADECOUNT not in", values, "tradecount");
            return (Criteria) this;
        }

        public Criteria andTradecountBetween(Long value1, Long value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("TRADECOUNT between", value1, value2, "tradecount");
            return (Criteria) this;
        }

        public Criteria andTradecountNotBetween(Long value1, Long value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("TRADECOUNT not between", value1, value2, "tradecount");
            return (Criteria) this;
        }

        public Criteria andTradeamountIsNull() {
            addCriterion("TRADEAMOUNT is null");
            return (Criteria) this;
        }

        public Criteria andTradeamountIsNotNull() {
            addCriterion("TRADEAMOUNT is not null");
            return (Criteria) this;
        }

        public Criteria andTradeamountEqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("TRADEAMOUNT =", value, "tradeamount");
            return (Criteria) this;
        }

        public Criteria andTradeamountNotEqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("TRADEAMOUNT <>", value, "tradeamount");
            return (Criteria) this;
        }

        public Criteria andTradeamountGreaterThan(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("TRADEAMOUNT >", value, "tradeamount");
            return (Criteria) this;
        }

        public Criteria andTradeamountGreaterThanOrEqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("TRADEAMOUNT >=", value, "tradeamount");
            return (Criteria) this;
        }

        public Criteria andTradeamountLessThan(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("TRADEAMOUNT <", value, "tradeamount");
            return (Criteria) this;
        }

        public Criteria andTradeamountLessThanOrEqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("TRADEAMOUNT <=", value, "tradeamount");
            return (Criteria) this;
        }

        public Criteria andTradeamountIn(List<Long> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("TRADEAMOUNT in", values, "tradeamount");
            return (Criteria) this;
        }

        public Criteria andTradeamountNotIn(List<Long> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("TRADEAMOUNT not in", values, "tradeamount");
            return (Criteria) this;
        }

        public Criteria andTradeamountBetween(Long value1, Long value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("TRADEAMOUNT between", value1, value2, "tradeamount");
            return (Criteria) this;
        }

        public Criteria andTradeamountNotBetween(Long value1, Long value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("TRADEAMOUNT not between", value1, value2, "tradeamount");
            return (Criteria) this;
        }

        public Criteria andExtrafield1IsNull() {
            addCriterion("EXTRAFIELD1 is null");
            return (Criteria) this;
        }

        public Criteria andExtrafield1IsNotNull() {
            addCriterion("EXTRAFIELD1 is not null");
            return (Criteria) this;
        }

        public Criteria andExtrafield1EqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD1 =", value, "extrafield1");
            return (Criteria) this;
        }

        public Criteria andExtrafield1NotEqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD1 <>", value, "extrafield1");
            return (Criteria) this;
        }

        public Criteria andExtrafield1GreaterThan(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD1 >", value, "extrafield1");
            return (Criteria) this;
        }

        public Criteria andExtrafield1GreaterThanOrEqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD1 >=", value, "extrafield1");
            return (Criteria) this;
        }

        public Criteria andExtrafield1LessThan(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD1 <", value, "extrafield1");
            return (Criteria) this;
        }

        public Criteria andExtrafield1LessThanOrEqualTo(Long value) {
            if(value==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD1 <=", value, "extrafield1");
            return (Criteria) this;
        }

        public Criteria andExtrafield1In(List<Long> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD1 in", values, "extrafield1");
            return (Criteria) this;
        }

        public Criteria andExtrafield1NotIn(List<Long> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD1 not in", values, "extrafield1");
            return (Criteria) this;
        }

        public Criteria andExtrafield1Between(Long value1, Long value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD1 between", value1, value2, "extrafield1");
            return (Criteria) this;
        }

        public Criteria andExtrafield1NotBetween(Long value1, Long value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD1 not between", value1, value2, "extrafield1");
            return (Criteria) this;
        }

        public Criteria andExtrafield2IsNull() {
            addCriterion("EXTRAFIELD2 is null");
            return (Criteria) this;
        }

        public Criteria andExtrafield2IsNotNull() {
            addCriterion("EXTRAFIELD2 is not null");
            return (Criteria) this;
        }

        public Criteria andExtrafield2EqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD2 =", value, "extrafield2");
            return (Criteria) this;
        }

        public Criteria andExtrafield2NotEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD2 <>", value, "extrafield2");
            return (Criteria) this;
        }

        public Criteria andExtrafield2GreaterThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD2 >", value, "extrafield2");
            return (Criteria) this;
        }

        public Criteria andExtrafield2GreaterThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD2 >=", value, "extrafield2");
            return (Criteria) this;
        }

        public Criteria andExtrafield2LessThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD2 <", value, "extrafield2");
            return (Criteria) this;
        }

        public Criteria andExtrafield2LessThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD2 <=", value, "extrafield2");
            return (Criteria) this;
        }

        public Criteria andExtrafield2Like(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD2 like", value, "extrafield2");
            return (Criteria) this;
        }

        public Criteria andExtrafield2NotLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD2 not like", value, "extrafield2");
            return (Criteria) this;
        }

        public Criteria andExtrafield2In(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD2 in", values, "extrafield2");
            return (Criteria) this;
        }

        public Criteria andExtrafield2NotIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD2 not in", values, "extrafield2");
            return (Criteria) this;
        }

        public Criteria andExtrafield2Between(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD2 between", value1, value2, "extrafield2");
            return (Criteria) this;
        }

        public Criteria andExtrafield2NotBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("EXTRAFIELD2 not between", value1, value2, "extrafield2");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_STAT_WAGERDATA
     *
     * @mbggenerated do_not_delete_during_merge Sat Mar 15 06:42:48 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}