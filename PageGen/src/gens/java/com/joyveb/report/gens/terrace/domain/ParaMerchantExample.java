package com.joyveb.report.gens.terrace.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ParaMerchantExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_PARA_MERCHANT
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_PARA_MERCHANT
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_PARA_MERCHANT
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_PARA_MERCHANT
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    protected String startRow;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_PARA_MERCHANT
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    protected String endRow;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_PARA_MERCHANT
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    protected String sumCol;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_PARA_MERCHANT
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    protected String groupSelClause;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_PARA_MERCHANT
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    protected String groupByClause;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_PARA_MERCHANT
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    protected List<Criteria> andCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_PARA_MERCHANT
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    public ParaMerchantExample() {
        oredCriteria = new ArrayList<Criteria>();
        andCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_PARA_MERCHANT
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    protected ParaMerchantExample(ParaMerchantExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.distinct = example.distinct;
        this.andCriteria = example.andCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_PARA_MERCHANT
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_PARA_MERCHANT
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_PARA_MERCHANT
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_PARA_MERCHANT
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_PARA_MERCHANT
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_PARA_MERCHANT
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_PARA_MERCHANT
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_PARA_MERCHANT
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_PARA_MERCHANT
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_PARA_MERCHANT
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        this.startRow=null;
        this.endRow=null;
        this.sumCol=null;
        this.groupSelClause=null;
        this.groupByClause=null;
        andCriteria.clear();
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_PARA_MERCHANT
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public void setStartRow(String startRow) {
         this.startRow = startRow;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_PARA_MERCHANT
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public String getStartRow() {
          return startRow;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_PARA_MERCHANT
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public void setEndRow(String endRow) {
         this.endRow = endRow;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_PARA_MERCHANT
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public String getEndRow() {
          return endRow;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_PARA_MERCHANT
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public void setSumCol(String sumCol) {
         this.sumCol = sumCol;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_PARA_MERCHANT
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public String getSumCol() {
          return sumCol;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_PARA_MERCHANT
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public void setGroupSelClause(String groupSelClause) {
         this.groupSelClause = groupSelClause;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_PARA_MERCHANT
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public String getGroupSelClause() {
          return groupSelClause;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_PARA_MERCHANT
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public void setGroupByClause(String groupByClause) {
         this.groupByClause = groupByClause;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_PARA_MERCHANT
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public String getGroupByClause() {
          return groupByClause;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_PARA_MERCHANT
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public List<Criteria> getAndCriteria() {
          return andCriteria;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table T_PARA_MERCHANT
    *
    * @generated Sat Mar 11 06:42:48 CST 2014
    */
    public Criteria and() {
          Criteria criteria = createCriteriaInternal();
          andCriteria.add(criteria);
          return criteria;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_PARA_MERCHANT
     *
     * @mbggenerated Sat Mar 15 06:42:48 CST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        public GeneratedCriteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        public void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        public void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        public void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        public void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andMerchantidIsNull() {
            addCriterion("MERCHANTID is null");
            return (Criteria) this;
        }

        public Criteria andMerchantidIsNotNull() {
            addCriterion("MERCHANTID is not null");
            return (Criteria) this;
        }

        public Criteria andMerchantidEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTID =", value, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidNotEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTID <>", value, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidGreaterThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTID >", value, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidGreaterThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTID >=", value, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidLessThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTID <", value, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidLessThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTID <=", value, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTID like", value, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidNotLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTID not like", value, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("MERCHANTID in", values, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidNotIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("MERCHANTID not in", values, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("MERCHANTID between", value1, value2, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantidNotBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("MERCHANTID not between", value1, value2, "merchantid");
            return (Criteria) this;
        }

        public Criteria andMerchantnameIsNull() {
            addCriterion("MERCHANTNAME is null");
            return (Criteria) this;
        }

        public Criteria andMerchantnameIsNotNull() {
            addCriterion("MERCHANTNAME is not null");
            return (Criteria) this;
        }

        public Criteria andMerchantnameEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTNAME =", value, "merchantname");
            return (Criteria) this;
        }

        public Criteria andMerchantnameNotEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTNAME <>", value, "merchantname");
            return (Criteria) this;
        }

        public Criteria andMerchantnameGreaterThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTNAME >", value, "merchantname");
            return (Criteria) this;
        }

        public Criteria andMerchantnameGreaterThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTNAME >=", value, "merchantname");
            return (Criteria) this;
        }

        public Criteria andMerchantnameLessThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTNAME <", value, "merchantname");
            return (Criteria) this;
        }

        public Criteria andMerchantnameLessThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTNAME <=", value, "merchantname");
            return (Criteria) this;
        }

        public Criteria andMerchantnameLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTNAME like", value, "merchantname");
            return (Criteria) this;
        }

        public Criteria andMerchantnameNotLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTNAME not like", value, "merchantname");
            return (Criteria) this;
        }

        public Criteria andMerchantnameIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("MERCHANTNAME in", values, "merchantname");
            return (Criteria) this;
        }

        public Criteria andMerchantnameNotIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("MERCHANTNAME not in", values, "merchantname");
            return (Criteria) this;
        }

        public Criteria andMerchantnameBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("MERCHANTNAME between", value1, value2, "merchantname");
            return (Criteria) this;
        }

        public Criteria andMerchantnameNotBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("MERCHANTNAME not between", value1, value2, "merchantname");
            return (Criteria) this;
        }

        public Criteria andIpaddrIsNull() {
            addCriterion("IPADDR is null");
            return (Criteria) this;
        }

        public Criteria andIpaddrIsNotNull() {
            addCriterion("IPADDR is not null");
            return (Criteria) this;
        }

        public Criteria andIpaddrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("IPADDR =", value, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrNotEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("IPADDR <>", value, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrGreaterThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("IPADDR >", value, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrGreaterThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("IPADDR >=", value, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrLessThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("IPADDR <", value, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrLessThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("IPADDR <=", value, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("IPADDR like", value, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrNotLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("IPADDR not like", value, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("IPADDR in", values, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrNotIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("IPADDR not in", values, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("IPADDR between", value1, value2, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrNotBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("IPADDR not between", value1, value2, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("STATUS is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            if(value==null){return (Criteria)this;}
            addCriterion("STATUS =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            if(value==null){return (Criteria)this;}
            addCriterion("STATUS <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            if(value==null){return (Criteria)this;}
            addCriterion("STATUS >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            if(value==null){return (Criteria)this;}
            addCriterion("STATUS >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            if(value==null){return (Criteria)this;}
            addCriterion("STATUS <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            if(value==null){return (Criteria)this;}
            addCriterion("STATUS <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("STATUS in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("STATUS not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("STATUS between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("STATUS not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andMerchantkeyIsNull() {
            addCriterion("MERCHANTKEY is null");
            return (Criteria) this;
        }

        public Criteria andMerchantkeyIsNotNull() {
            addCriterion("MERCHANTKEY is not null");
            return (Criteria) this;
        }

        public Criteria andMerchantkeyEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTKEY =", value, "merchantkey");
            return (Criteria) this;
        }

        public Criteria andMerchantkeyNotEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTKEY <>", value, "merchantkey");
            return (Criteria) this;
        }

        public Criteria andMerchantkeyGreaterThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTKEY >", value, "merchantkey");
            return (Criteria) this;
        }

        public Criteria andMerchantkeyGreaterThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTKEY >=", value, "merchantkey");
            return (Criteria) this;
        }

        public Criteria andMerchantkeyLessThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTKEY <", value, "merchantkey");
            return (Criteria) this;
        }

        public Criteria andMerchantkeyLessThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTKEY <=", value, "merchantkey");
            return (Criteria) this;
        }

        public Criteria andMerchantkeyLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTKEY like", value, "merchantkey");
            return (Criteria) this;
        }

        public Criteria andMerchantkeyNotLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTKEY not like", value, "merchantkey");
            return (Criteria) this;
        }

        public Criteria andMerchantkeyIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("MERCHANTKEY in", values, "merchantkey");
            return (Criteria) this;
        }

        public Criteria andMerchantkeyNotIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("MERCHANTKEY not in", values, "merchantkey");
            return (Criteria) this;
        }

        public Criteria andMerchantkeyBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("MERCHANTKEY between", value1, value2, "merchantkey");
            return (Criteria) this;
        }

        public Criteria andMerchantkeyNotBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("MERCHANTKEY not between", value1, value2, "merchantkey");
            return (Criteria) this;
        }

        public Criteria andFtppathIsNull() {
            addCriterion("FTPPATH is null");
            return (Criteria) this;
        }

        public Criteria andFtppathIsNotNull() {
            addCriterion("FTPPATH is not null");
            return (Criteria) this;
        }

        public Criteria andFtppathEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPATH =", value, "ftppath");
            return (Criteria) this;
        }

        public Criteria andFtppathNotEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPATH <>", value, "ftppath");
            return (Criteria) this;
        }

        public Criteria andFtppathGreaterThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPATH >", value, "ftppath");
            return (Criteria) this;
        }

        public Criteria andFtppathGreaterThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPATH >=", value, "ftppath");
            return (Criteria) this;
        }

        public Criteria andFtppathLessThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPATH <", value, "ftppath");
            return (Criteria) this;
        }

        public Criteria andFtppathLessThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPATH <=", value, "ftppath");
            return (Criteria) this;
        }

        public Criteria andFtppathLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPATH like", value, "ftppath");
            return (Criteria) this;
        }

        public Criteria andFtppathNotLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPATH not like", value, "ftppath");
            return (Criteria) this;
        }

        public Criteria andFtppathIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("FTPPATH in", values, "ftppath");
            return (Criteria) this;
        }

        public Criteria andFtppathNotIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("FTPPATH not in", values, "ftppath");
            return (Criteria) this;
        }

        public Criteria andFtppathBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("FTPPATH between", value1, value2, "ftppath");
            return (Criteria) this;
        }

        public Criteria andFtppathNotBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("FTPPATH not between", value1, value2, "ftppath");
            return (Criteria) this;
        }

        public Criteria andFtpipIsNull() {
            addCriterion("FTPIP is null");
            return (Criteria) this;
        }

        public Criteria andFtpipIsNotNull() {
            addCriterion("FTPIP is not null");
            return (Criteria) this;
        }

        public Criteria andFtpipEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPIP =", value, "ftpip");
            return (Criteria) this;
        }

        public Criteria andFtpipNotEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPIP <>", value, "ftpip");
            return (Criteria) this;
        }

        public Criteria andFtpipGreaterThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPIP >", value, "ftpip");
            return (Criteria) this;
        }

        public Criteria andFtpipGreaterThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPIP >=", value, "ftpip");
            return (Criteria) this;
        }

        public Criteria andFtpipLessThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPIP <", value, "ftpip");
            return (Criteria) this;
        }

        public Criteria andFtpipLessThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPIP <=", value, "ftpip");
            return (Criteria) this;
        }

        public Criteria andFtpipLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPIP like", value, "ftpip");
            return (Criteria) this;
        }

        public Criteria andFtpipNotLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPIP not like", value, "ftpip");
            return (Criteria) this;
        }

        public Criteria andFtpipIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("FTPIP in", values, "ftpip");
            return (Criteria) this;
        }

        public Criteria andFtpipNotIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("FTPIP not in", values, "ftpip");
            return (Criteria) this;
        }

        public Criteria andFtpipBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("FTPIP between", value1, value2, "ftpip");
            return (Criteria) this;
        }

        public Criteria andFtpipNotBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("FTPIP not between", value1, value2, "ftpip");
            return (Criteria) this;
        }

        public Criteria andFtpuserIsNull() {
            addCriterion("FTPUSER is null");
            return (Criteria) this;
        }

        public Criteria andFtpuserIsNotNull() {
            addCriterion("FTPUSER is not null");
            return (Criteria) this;
        }

        public Criteria andFtpuserEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPUSER =", value, "ftpuser");
            return (Criteria) this;
        }

        public Criteria andFtpuserNotEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPUSER <>", value, "ftpuser");
            return (Criteria) this;
        }

        public Criteria andFtpuserGreaterThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPUSER >", value, "ftpuser");
            return (Criteria) this;
        }

        public Criteria andFtpuserGreaterThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPUSER >=", value, "ftpuser");
            return (Criteria) this;
        }

        public Criteria andFtpuserLessThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPUSER <", value, "ftpuser");
            return (Criteria) this;
        }

        public Criteria andFtpuserLessThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPUSER <=", value, "ftpuser");
            return (Criteria) this;
        }

        public Criteria andFtpuserLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPUSER like", value, "ftpuser");
            return (Criteria) this;
        }

        public Criteria andFtpuserNotLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPUSER not like", value, "ftpuser");
            return (Criteria) this;
        }

        public Criteria andFtpuserIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("FTPUSER in", values, "ftpuser");
            return (Criteria) this;
        }

        public Criteria andFtpuserNotIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("FTPUSER not in", values, "ftpuser");
            return (Criteria) this;
        }

        public Criteria andFtpuserBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("FTPUSER between", value1, value2, "ftpuser");
            return (Criteria) this;
        }

        public Criteria andFtpuserNotBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("FTPUSER not between", value1, value2, "ftpuser");
            return (Criteria) this;
        }

        public Criteria andFtppwdIsNull() {
            addCriterion("FTPPWD is null");
            return (Criteria) this;
        }

        public Criteria andFtppwdIsNotNull() {
            addCriterion("FTPPWD is not null");
            return (Criteria) this;
        }

        public Criteria andFtppwdEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPWD =", value, "ftppwd");
            return (Criteria) this;
        }

        public Criteria andFtppwdNotEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPWD <>", value, "ftppwd");
            return (Criteria) this;
        }

        public Criteria andFtppwdGreaterThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPWD >", value, "ftppwd");
            return (Criteria) this;
        }

        public Criteria andFtppwdGreaterThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPWD >=", value, "ftppwd");
            return (Criteria) this;
        }

        public Criteria andFtppwdLessThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPWD <", value, "ftppwd");
            return (Criteria) this;
        }

        public Criteria andFtppwdLessThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPWD <=", value, "ftppwd");
            return (Criteria) this;
        }

        public Criteria andFtppwdLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPWD like", value, "ftppwd");
            return (Criteria) this;
        }

        public Criteria andFtppwdNotLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPWD not like", value, "ftppwd");
            return (Criteria) this;
        }

        public Criteria andFtppwdIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("FTPPWD in", values, "ftppwd");
            return (Criteria) this;
        }

        public Criteria andFtppwdNotIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("FTPPWD not in", values, "ftppwd");
            return (Criteria) this;
        }

        public Criteria andFtppwdBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("FTPPWD between", value1, value2, "ftppwd");
            return (Criteria) this;
        }

        public Criteria andFtppwdNotBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("FTPPWD not between", value1, value2, "ftppwd");
            return (Criteria) this;
        }

        public Criteria andFtpportIsNull() {
            addCriterion("FTPPORT is null");
            return (Criteria) this;
        }

        public Criteria andFtpportIsNotNull() {
            addCriterion("FTPPORT is not null");
            return (Criteria) this;
        }

        public Criteria andFtpportEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPORT =", value, "ftpport");
            return (Criteria) this;
        }

        public Criteria andFtpportNotEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPORT <>", value, "ftpport");
            return (Criteria) this;
        }

        public Criteria andFtpportGreaterThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPORT >", value, "ftpport");
            return (Criteria) this;
        }

        public Criteria andFtpportGreaterThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPORT >=", value, "ftpport");
            return (Criteria) this;
        }

        public Criteria andFtpportLessThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPORT <", value, "ftpport");
            return (Criteria) this;
        }

        public Criteria andFtpportLessThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPORT <=", value, "ftpport");
            return (Criteria) this;
        }

        public Criteria andFtpportLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPORT like", value, "ftpport");
            return (Criteria) this;
        }

        public Criteria andFtpportNotLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPPORT not like", value, "ftpport");
            return (Criteria) this;
        }

        public Criteria andFtpportIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("FTPPORT in", values, "ftpport");
            return (Criteria) this;
        }

        public Criteria andFtpportNotIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("FTPPORT not in", values, "ftpport");
            return (Criteria) this;
        }

        public Criteria andFtpportBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("FTPPORT between", value1, value2, "ftpport");
            return (Criteria) this;
        }

        public Criteria andFtpportNotBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("FTPPORT not between", value1, value2, "ftpport");
            return (Criteria) this;
        }

        public Criteria andMerchantprefixIsNull() {
            addCriterion("MERCHANTPREFIX is null");
            return (Criteria) this;
        }

        public Criteria andMerchantprefixIsNotNull() {
            addCriterion("MERCHANTPREFIX is not null");
            return (Criteria) this;
        }

        public Criteria andMerchantprefixEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTPREFIX =", value, "merchantprefix");
            return (Criteria) this;
        }

        public Criteria andMerchantprefixNotEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTPREFIX <>", value, "merchantprefix");
            return (Criteria) this;
        }

        public Criteria andMerchantprefixGreaterThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTPREFIX >", value, "merchantprefix");
            return (Criteria) this;
        }

        public Criteria andMerchantprefixGreaterThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTPREFIX >=", value, "merchantprefix");
            return (Criteria) this;
        }

        public Criteria andMerchantprefixLessThan(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTPREFIX <", value, "merchantprefix");
            return (Criteria) this;
        }

        public Criteria andMerchantprefixLessThanOrEqualTo(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTPREFIX <=", value, "merchantprefix");
            return (Criteria) this;
        }

        public Criteria andMerchantprefixLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTPREFIX like", value, "merchantprefix");
            return (Criteria) this;
        }

        public Criteria andMerchantprefixNotLike(String value) {
            if(value==null){return (Criteria)this;}
            addCriterion("MERCHANTPREFIX not like", value, "merchantprefix");
            return (Criteria) this;
        }

        public Criteria andMerchantprefixIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("MERCHANTPREFIX in", values, "merchantprefix");
            return (Criteria) this;
        }

        public Criteria andMerchantprefixNotIn(List<String> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("MERCHANTPREFIX not in", values, "merchantprefix");
            return (Criteria) this;
        }

        public Criteria andMerchantprefixBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("MERCHANTPREFIX between", value1, value2, "merchantprefix");
            return (Criteria) this;
        }

        public Criteria andMerchantprefixNotBetween(String value1, String value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("MERCHANTPREFIX not between", value1, value2, "merchantprefix");
            return (Criteria) this;
        }

        public Criteria andPatternIsNull() {
            addCriterion("PATTERN is null");
            return (Criteria) this;
        }

        public Criteria andPatternIsNotNull() {
            addCriterion("PATTERN is not null");
            return (Criteria) this;
        }

        public Criteria andPatternEqualTo(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("PATTERN =", value, "pattern");
            return (Criteria) this;
        }

        public Criteria andPatternNotEqualTo(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("PATTERN <>", value, "pattern");
            return (Criteria) this;
        }

        public Criteria andPatternGreaterThan(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("PATTERN >", value, "pattern");
            return (Criteria) this;
        }

        public Criteria andPatternGreaterThanOrEqualTo(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("PATTERN >=", value, "pattern");
            return (Criteria) this;
        }

        public Criteria andPatternLessThan(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("PATTERN <", value, "pattern");
            return (Criteria) this;
        }

        public Criteria andPatternLessThanOrEqualTo(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("PATTERN <=", value, "pattern");
            return (Criteria) this;
        }

        public Criteria andPatternIn(List<Short> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("PATTERN in", values, "pattern");
            return (Criteria) this;
        }

        public Criteria andPatternNotIn(List<Short> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("PATTERN not in", values, "pattern");
            return (Criteria) this;
        }

        public Criteria andPatternBetween(Short value1, Short value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("PATTERN between", value1, value2, "pattern");
            return (Criteria) this;
        }

        public Criteria andPatternNotBetween(Short value1, Short value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("PATTERN not between", value1, value2, "pattern");
            return (Criteria) this;
        }

        public Criteria andEncryptIsNull() {
            addCriterion("ENCRYPT is null");
            return (Criteria) this;
        }

        public Criteria andEncryptIsNotNull() {
            addCriterion("ENCRYPT is not null");
            return (Criteria) this;
        }

        public Criteria andEncryptEqualTo(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("ENCRYPT =", value, "encrypt");
            return (Criteria) this;
        }

        public Criteria andEncryptNotEqualTo(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("ENCRYPT <>", value, "encrypt");
            return (Criteria) this;
        }

        public Criteria andEncryptGreaterThan(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("ENCRYPT >", value, "encrypt");
            return (Criteria) this;
        }

        public Criteria andEncryptGreaterThanOrEqualTo(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("ENCRYPT >=", value, "encrypt");
            return (Criteria) this;
        }

        public Criteria andEncryptLessThan(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("ENCRYPT <", value, "encrypt");
            return (Criteria) this;
        }

        public Criteria andEncryptLessThanOrEqualTo(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("ENCRYPT <=", value, "encrypt");
            return (Criteria) this;
        }

        public Criteria andEncryptIn(List<Short> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("ENCRYPT in", values, "encrypt");
            return (Criteria) this;
        }

        public Criteria andEncryptNotIn(List<Short> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("ENCRYPT not in", values, "encrypt");
            return (Criteria) this;
        }

        public Criteria andEncryptBetween(Short value1, Short value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("ENCRYPT between", value1, value2, "encrypt");
            return (Criteria) this;
        }

        public Criteria andEncryptNotBetween(Short value1, Short value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("ENCRYPT not between", value1, value2, "encrypt");
            return (Criteria) this;
        }

        public Criteria andResulttypeIsNull() {
            addCriterion("RESULTTYPE is null");
            return (Criteria) this;
        }

        public Criteria andResulttypeIsNotNull() {
            addCriterion("RESULTTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andResulttypeEqualTo(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("RESULTTYPE =", value, "resulttype");
            return (Criteria) this;
        }

        public Criteria andResulttypeNotEqualTo(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("RESULTTYPE <>", value, "resulttype");
            return (Criteria) this;
        }

        public Criteria andResulttypeGreaterThan(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("RESULTTYPE >", value, "resulttype");
            return (Criteria) this;
        }

        public Criteria andResulttypeGreaterThanOrEqualTo(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("RESULTTYPE >=", value, "resulttype");
            return (Criteria) this;
        }

        public Criteria andResulttypeLessThan(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("RESULTTYPE <", value, "resulttype");
            return (Criteria) this;
        }

        public Criteria andResulttypeLessThanOrEqualTo(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("RESULTTYPE <=", value, "resulttype");
            return (Criteria) this;
        }

        public Criteria andResulttypeIn(List<Short> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("RESULTTYPE in", values, "resulttype");
            return (Criteria) this;
        }

        public Criteria andResulttypeNotIn(List<Short> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("RESULTTYPE not in", values, "resulttype");
            return (Criteria) this;
        }

        public Criteria andResulttypeBetween(Short value1, Short value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("RESULTTYPE between", value1, value2, "resulttype");
            return (Criteria) this;
        }

        public Criteria andResulttypeNotBetween(Short value1, Short value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("RESULTTYPE not between", value1, value2, "resulttype");
            return (Criteria) this;
        }

        public Criteria andFtptypeIsNull() {
            addCriterion("FTPTYPE is null");
            return (Criteria) this;
        }

        public Criteria andFtptypeIsNotNull() {
            addCriterion("FTPTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andFtptypeEqualTo(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPTYPE =", value, "ftptype");
            return (Criteria) this;
        }

        public Criteria andFtptypeNotEqualTo(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPTYPE <>", value, "ftptype");
            return (Criteria) this;
        }

        public Criteria andFtptypeGreaterThan(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPTYPE >", value, "ftptype");
            return (Criteria) this;
        }

        public Criteria andFtptypeGreaterThanOrEqualTo(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPTYPE >=", value, "ftptype");
            return (Criteria) this;
        }

        public Criteria andFtptypeLessThan(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPTYPE <", value, "ftptype");
            return (Criteria) this;
        }

        public Criteria andFtptypeLessThanOrEqualTo(Short value) {
            if(value==null){return (Criteria)this;}
            addCriterion("FTPTYPE <=", value, "ftptype");
            return (Criteria) this;
        }

        public Criteria andFtptypeIn(List<Short> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("FTPTYPE in", values, "ftptype");
            return (Criteria) this;
        }

        public Criteria andFtptypeNotIn(List<Short> values) {
            if(values==null){return (Criteria)this;}
            addCriterion("FTPTYPE not in", values, "ftptype");
            return (Criteria) this;
        }

        public Criteria andFtptypeBetween(Short value1, Short value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("FTPTYPE between", value1, value2, "ftptype");
            return (Criteria) this;
        }

        public Criteria andFtptypeNotBetween(Short value1, Short value2) {
            if(value2==null){return (Criteria)this;}
            if(value1==null){return (Criteria)this;}
            addCriterion("FTPTYPE not between", value1, value2, "ftptype");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_PARA_MERCHANT
     *
     * @mbggenerated do_not_delete_during_merge Sat Mar 15 06:42:48 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}